% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{multiprobit_utils}
\alias{multiprobit_utils}
\alias{tri_solve}
\alias{inverse_chol_reverse}
\alias{qchisq_pnorm}
\alias{qnorm_pchisq}
\alias{qbeta_pchisq}
\alias{qchisq_pbeta}
\alias{sparse_identity}
\title{Internal multiprobit utilities}
\usage{
tri_solve(A, b, lower_tri = FALSE)

inverse_chol_reverse(Sigma_chol, lower_chol = FALSE)

qchisq_pnorm(x, df)

qnorm_pchisq(x, df)

qbeta_pchisq(x, df, shape1, shape2, ncp)

qchisq_pbeta(x, shape1, shape2, df, ncp)

sparse_identity(d)
}
\arguments{
\item{Sigma_chol}{Cholesky factor of a covariance matrix}

\item{lower_chol}{\code{TRUE} if lower triangular Cholesky factors are used
Default: FALSE}

\item{x}{Probability or quantile}

\item{df}{Degrees of freedom parameter}

\item{shape1}{Shape parameter for a Beta distribution}

\item{shape2}{Shape parameter for a Beta distribution}

\item{ncp}{Non-centrality parameter for Beta and \eqn{\chi^2} distributions}

\item{d}{Matrix dimension}
}
\value{
\code{inverse_chol_reverse()} returns a Cholesky matrix of the same triangle orientation as the input,
with rows and columns in reverse order.
}
\description{
Compute inverse of a Cholesky matrix,
storing the result in reverse order, see Details.
}
\details{
\code{tri_solve()} solves triangular systems with back/forwardsolve

\code{inverse_chol_reverse()} notes:

For \code{lower_chol == FALSE},
the input \code{Sigma_chol} is the matrix \eqn{R} in the Cholesky factorisation
\eqn{\Sigma=R^T R} with inverse \eqn{Q=R^{-1}R^{-T}}. Since \eqn{R^{-1}} has
the opposite upper/lower triangular property to \eqn{R^T}, this \eqn{Q}
factorisation isn't a regular Cholesky factorisation. Let \eqn{P} be the
permutation matrix that reverses element order. Then
\eqn{PQP=PR^{-1}PPR^{-T}P}, and \eqn{PR^{-T}P} is the Cholesky factor of
\eqn{PQP} with the same upper/lower triangular property as \eqn{R}.

For \code{lower_chol == TRUE}, the input is \eqn{L} in \eqn{\Sigma=LL^T} and the
output is \eqn{PL^{-T}P}, with \eqn{PQP=PL^{-T}PPL^{-1}P}.

\code{qchisq_pnorm()} evaluates \code{qchisq(pnorm(...))} with
attempt at numerical stability.
}
\note{
These are internal non-exported function
}
\examples{
if(interactive()){
  inverse_chol_reverse(matrix(c(1, 0, 2, 3), 2, 2))
}
}
\keyword{internal}
